#!/bin/bash

# ==================================================================================
# SCRIPT DE VALIDATION FINALE - PORTFOLIO UBUNTU 24.04
# Test complet de l'installation et fonctionnement
# ==================================================================================

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Variables
DOMAIN=${1:-"localhost"}
BACKEND_PORT=${2:-8001}
FRONTEND_PORT=${3:-3000}

log_info "üéØ VALIDATION COMPL√àTE PORTFOLIO UBUNTU 24.04"
log_info "Domain: $DOMAIN | Backend: $BACKEND_PORT | Frontend: $FRONTEND_PORT"

# ==================================================================================
# TEST 1: SERVICES SYST√àME
# ==================================================================================

log_info "üîß Test 1: Services syst√®me..."

# Test MariaDB
if systemctl is-active mariadb > /dev/null 2>&1 || pgrep mysqld > /dev/null 2>&1; then
    log_success "‚úÖ MariaDB service actif"
else
    log_error "‚ùå MariaDB service non actif"
    exit 1
fi

# Test Nginx
if systemctl is-active nginx > /dev/null 2>&1 || pgrep nginx > /dev/null 2>&1; then
    log_success "‚úÖ Nginx service actif"
else
    log_warning "‚ö†Ô∏è Nginx service non actif (optionnel)"
fi

# Test Supervisor
if systemctl is-active supervisor > /dev/null 2>&1 || pgrep supervisord > /dev/null 2>&1; then
    log_success "‚úÖ Supervisor service actif"
else
    log_error "‚ùå Supervisor service non actif"
    exit 1
fi

# ==================================================================================
# TEST 2: SERVICES PORTFOLIO
# ==================================================================================

log_info "üöÄ Test 2: Services portfolio..."

# Test backend
if supervisorctl status backend | grep RUNNING > /dev/null 2>&1; then
    log_success "‚úÖ Backend portfolio actif"
else
    log_error "‚ùå Backend portfolio non actif"
    exit 1
fi

# Test frontend
if supervisorctl status frontend | grep RUNNING > /dev/null 2>&1; then
    log_success "‚úÖ Frontend portfolio actif"
else
    log_error "‚ùå Frontend portfolio non actif"
    exit 1
fi

# ==================================================================================
# TEST 3: CONNECTIVIT√â API
# ==================================================================================

log_info "üåê Test 3: Connectivit√© API..."

# Test health check
if curl -s -f "http://localhost:$BACKEND_PORT/api/health" > /dev/null 2>&1; then
    log_success "‚úÖ Health check API fonctionnel"
else
    log_error "‚ùå Health check API non accessible"
    exit 1
fi

# Test personal info
if curl -s -f "http://localhost:$BACKEND_PORT/api/portfolio/personal-info" > /dev/null 2>&1; then
    log_success "‚úÖ Endpoint personal-info fonctionnel"
else
    log_error "‚ùå Endpoint personal-info non accessible"
    exit 1
fi

# Test skills
if curl -s -f "http://localhost:$BACKEND_PORT/api/portfolio/skills" > /dev/null 2>&1; then
    log_success "‚úÖ Endpoint skills fonctionnel"
else
    log_error "‚ùå Endpoint skills non accessible"
    exit 1
fi

# Test projects
if curl -s -f "http://localhost:$BACKEND_PORT/api/portfolio/projects" > /dev/null 2>&1; then
    log_success "‚úÖ Endpoint projects fonctionnel"
else
    log_error "‚ùå Endpoint projects non accessible"
    exit 1
fi

# ==================================================================================
# TEST 4: FRONTEND
# ==================================================================================

log_info "‚öõÔ∏è Test 4: Frontend..."

# Test accessibilit√© frontend
if curl -s -f "http://localhost:$FRONTEND_PORT" > /dev/null 2>&1; then
    log_success "‚úÖ Frontend accessible"
else
    log_error "‚ùå Frontend non accessible"
    exit 1
fi

# ==================================================================================
# TEST 5: BASE DE DONN√âES
# ==================================================================================

log_info "üóÑÔ∏è Test 5: Base de donn√©es..."

# Test connexion DB
if mysql -u portfolio_user -pportfolio_password -e "SELECT 1;" portfolio_db > /dev/null 2>&1; then
    log_success "‚úÖ Connexion base de donn√©es OK"
else
    log_error "‚ùå Connexion base de donn√©es √©chou√©e"
    exit 1
fi

# Test tables
TABLE_COUNT=$(mysql -u portfolio_user -pportfolio_password -e "SHOW TABLES;" portfolio_db 2>/dev/null | wc -l)
if [ "$TABLE_COUNT" -gt 5 ]; then
    log_success "‚úÖ Tables de base de donn√©es pr√©sentes ($TABLE_COUNT tables)"
else
    log_error "‚ùå Tables de base de donn√©es manquantes ($TABLE_COUNT tables)"
    exit 1
fi

# ==================================================================================
# TEST 6: DONN√âES PORTFOLIO
# ==================================================================================

log_info "üìä Test 6: Donn√©es portfolio..."

# Test donn√©es Hocine
if curl -s "http://localhost:$BACKEND_PORT/api/portfolio/personal-info" | grep -i "hocine" > /dev/null 2>&1; then
    log_success "‚úÖ Donn√©es Hocine IRATNI pr√©sentes"
else
    log_error "‚ùå Donn√©es Hocine IRATNI manquantes"
    exit 1
fi

# Test comp√©tences
if curl -s "http://localhost:$BACKEND_PORT/api/portfolio/skills" | grep -E "R√©seaux|Syst√®mes|r√©seau|syst√®me" > /dev/null 2>&1; then
    log_success "‚úÖ Comp√©tences techniques pr√©sentes"
else
    log_warning "‚ö†Ô∏è Comp√©tences techniques non d√©tect√©es"
fi

# Test projets
if curl -s "http://localhost:$BACKEND_PORT/api/portfolio/projects" | grep -E "BTS|SIO|projet" > /dev/null 2>&1; then
    log_success "‚úÖ Projets pr√©sents"
else
    log_warning "‚ö†Ô∏è Projets non d√©tect√©s"
fi

# ==================================================================================
# TEST 7: PERFORMANCE
# ==================================================================================

log_info "‚ö° Test 7: Performance..."

# Test temps de r√©ponse API
RESPONSE_TIME=$(curl -o /dev/null -s -w "%{time_total}\n" "http://localhost:$BACKEND_PORT/api/health")
if (( $(echo "$RESPONSE_TIME < 1.0" | bc -l) )); then
    log_success "‚úÖ Temps de r√©ponse API OK (${RESPONSE_TIME}s)"
else
    log_warning "‚ö†Ô∏è Temps de r√©ponse API lent (${RESPONSE_TIME}s)"
fi

# Test charge API (5 requ√™tes simultan√©es)
log_info "Test de charge (5 requ√™tes)..."
for i in {1..5}; do
    curl -s "http://localhost:$BACKEND_PORT/api/portfolio/personal-info" > /dev/null &
done
wait

log_success "‚úÖ Test de charge termin√©"

# ==================================================================================
# TEST 8: S√âCURIT√â
# ==================================================================================

log_info "üîí Test 8: S√©curit√©..."

# Test firewall
if command -v ufw > /dev/null 2>&1; then
    if ufw status | grep -q "active"; then
        log_success "‚úÖ Firewall UFW actif"
    else
        log_warning "‚ö†Ô∏è Firewall UFW inactif"
    fi
else
    log_warning "‚ö†Ô∏è UFW non install√©"
fi

# Test headers de s√©curit√© (si Nginx configur√©)
if curl -s -I "http://localhost/" | grep -E "X-Frame-Options|X-Content-Type-Options" > /dev/null 2>&1; then
    log_success "‚úÖ Headers de s√©curit√© configur√©s"
else
    log_warning "‚ö†Ô∏è Headers de s√©curit√© non d√©tect√©s"
fi

# ==================================================================================
# R√âSUM√â FINAL
# ==================================================================================

log_info "üìã R√âSUM√â DE LA VALIDATION"
echo ""
echo "=================================================="
echo "üéØ VALIDATION TERMIN√âE AVEC SUCC√àS"
echo "=================================================="
echo ""
echo "‚úÖ Tous les tests critiques sont pass√©s !"
echo ""
echo "üåê Acc√®s au portfolio :"
echo "  ‚Ä¢ Frontend : http://$DOMAIN:$FRONTEND_PORT/"
echo "  ‚Ä¢ Backend  : http://$DOMAIN:$BACKEND_PORT/api/"
echo "  ‚Ä¢ Health   : http://$DOMAIN:$BACKEND_PORT/api/health"
echo ""
echo "üîß Services actifs :"
echo "  ‚Ä¢ MariaDB : ‚úÖ Actif"
echo "  ‚Ä¢ Backend : ‚úÖ Actif"
echo "  ‚Ä¢ Frontend: ‚úÖ Actif"
echo ""
echo "üìä Donn√©es :"
echo "  ‚Ä¢ Profil Hocine IRATNI : ‚úÖ Pr√©sent"
echo "  ‚Ä¢ Comp√©tences techniques : ‚úÖ Pr√©sentes"
echo "  ‚Ä¢ Projets BTS SIO : ‚úÖ Pr√©sents"
echo ""
echo "‚ö° Performance :"
echo "  ‚Ä¢ Temps de r√©ponse API : ${RESPONSE_TIME}s"
echo "  ‚Ä¢ Test de charge : ‚úÖ R√©ussi"
echo ""
log_success "üéâ PORTFOLIO UBUNTU 24.04 COMPL√àTEMENT OP√âRATIONNEL !"
echo ""
echo "üìû Support : Consultez INSTALLATION-MANUELLE-UBUNTU-24.04.md"
echo "=================================================="